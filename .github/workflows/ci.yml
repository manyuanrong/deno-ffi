name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]

    steps:
      - name: Setup Environment
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          echo 'GH_ACTIONS=1' >> $GITHUB_ENV
          echo 'RUST_BACKTRACE=full' >> $GITHUB_ENV
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: 1.46.0

      - name: Setup GNU Tools (Linux)
        uses: actions-rs/toolchain@v1
        if: startsWith(matrix.os, 'ubuntu')
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          
      - name: Setup GNU Tools (Windows)
        uses: actions-rs/toolchain@v1
        if: startsWith(matrix.os, 'windows')
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          
      - name: Setup GNU Tools (MacOS)
        if: startsWith(matrix.os, 'macOS')
        run: brew install autoconf automake libtool libffi

      - name: Log versions
        run: |
          rustc --version
          cargo --version

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-

      # Build
      - name: Build
        run: cargo build --release --locked --all-targets
